@model CMDB.ViewModels.vTmp_CI_Profiles_R

@{
    ViewBag.Title = "Review";
}

<h2>覆核範本</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    string disabled = "disabled";

    <div class="form-horizontal">
        @*<h4>vTmp_CI_Profiles_R</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProfileID)

        <div class="col-md-6 divnew">
            @*<div class="form-group">
                    @Html.LabelFor(model => model.oProfileID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.oProfileID, new { htmlAttributes = new { @class = "form-control", @disabled } })
                        @Html.ValidationMessageFor(model => model.oProfileID, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            <div class="form-group">
               <label class="control-label col-md-2" >來源</label>
                <div class="col-md-6">
                    <h5>編輯後資料</h5>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control ", @disabled } })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProfileName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.ProfileName, new { htmlAttributes = new { @class = "form-control", @disabled } })
                    @Html.ValidationMessageFor(model => model.ProfileName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @disabled } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group  SysImg">
                @Html.LabelFor(model => model.ImgID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.ImgID, new { htmlAttributes = new { @class = "form-control", @disabled } })
                    @Html.ValidationMessageFor(model => model.ImgID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImgPath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    <img id=model.ImgID src=@Url.Content(Model.ImgPath) />
                    @Html.ValidationMessageFor(model => model.ImgPath, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AttributesData, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    <table class="table table-bordered">
                        <tr class="active">
                            <th>
                                @Html.DisplayNameFor(model => model.AttributesData.First().AttributeID)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AttributesData.First().AttributeName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AttributesData.First().AttributeTypeName)
                            </th>
                        </tr>
                        @foreach (var item in Model.AttributesData)
                        {
                            string AttributeName = item.AttributeID + "_" + item.AttributeName;
                            string AttributeTypeName = item.AttributeTypeID + "_" + item.AttributeTypeName;
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AttributeID)
                                </td>
                                <td>
                                    @*@Html.DisplayFor(modelItem => item.AttributeName)*@
                                    <input type="text" name=@AttributeName value="@item.AttributeName" class="form-control" @disabled>
                                </td>
                                <td>
                                    @*@Html.DisplayFor(modelItem => item.AttributeTypeName)*@
                                    <input type="text" name=@AttributeTypeName value="@item.AttributeTypeName" class="form-control" @disabled>
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Creator, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Creator, new { htmlAttributes = new { @class = "form-control", @disabled } })
                    @Html.ValidationMessageFor(model => model.Creator, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.CreateTime, new { htmlAttributes = new { @class = "form-control", @disabled } })
                    @Html.ValidationMessageFor(model => model.CreateTime, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @if (Model.Type == "編輯" || Model.Type == "刪除")
        {
            int oID = Model.ImgID;

      

            <div class="col-md-6 divold">
                <div class="form-group">
                    <label class="control-label col-md-2">來源</label>
                    <div class="col-md-6">
                        <h5>原始資料</h5>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control ", @disabled } })
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.oProfileName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.oProfileName, new { htmlAttributes = new { @class = "form-control", @disabled } })
                        @Html.ValidationMessageFor(model => model.oProfileName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.oDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.oDescription, new { htmlAttributes = new { @class = "form-control", @disabled } })
                        @Html.ValidationMessageFor(model => model.oDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group disabled">
                    @Html.LabelFor(model => model.oImgID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.oImgID, new { htmlAttributes = new { @class = "form-control", @disabled } })
                        @Html.ValidationMessageFor(model => model.oImgID, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.oImgPath, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        <img id=@oID src=@Url.Content(Model.oImgPath) />
                        @Html.ValidationMessageFor(model => model.oImgPath, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.oAttributesData, htmlAttributes: new { @class = "control-label col-md-2"  })
                    <div class="col-md-6">
                        <table class="table table-bordered">
                            <tr class="active">
                                <th>
                                    @Html.DisplayNameFor(model => model.oAttributesData.First().AttributeID)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.oAttributesData.First().AttributeName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.oAttributesData.First().AttributeTypeName)
                                </th>
                            </tr>
                            @foreach (var item in Model.oAttributesData)
                            {
                                string AttributeName = "o"+item.AttributeID + "_" + item.AttributeName;
                                string AttributeTypeName = "o" + item.AttributeTypeID + "_" + item.AttributeTypeName;
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.AttributeID)
                                    </td>
                                    <td>
                                        @*@Html.DisplayFor(modelItem => item.AttributeName)*@
                                        <input type="text" name=@AttributeName value="@item.AttributeName" class="form-control" @disabled>
                                    </td>
                                    <td>
                                        @*@Html.DisplayFor(modelItem => item.AttributeTypeName)*@
                                        <input type="text" name=@AttributeTypeName value="@item.AttributeTypeName" class="form-control" @disabled>
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.oUpadter, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.oUpadter, new { htmlAttributes = new { @class = "form-control", @disabled } })
                        @Html.ValidationMessageFor(model => model.oUpadter, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.oUpdateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.oUpdateTime, new { htmlAttributes = new { @class = "form-control", @disabled } })
                        @Html.ValidationMessageFor(model => model.oUpdateTime, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="覆核" class="btn btn-default"  />
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("返回待覆核範本清單", "ReviewIndex")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*@Scripts.Render("~/bundles/cmdb")*@
}

@section ReviewProfileScript
{
    <script>
        $(function () {
            //取得屬性選單
            getAttributeDropList("", "SearchAttributeID");
            $("#SearchAttributeID").prepend("<option value='0'>物件名稱</option>");

            compareReviewData();
            $(".SysImg").hide();

            $("#Searchbtn").click(function () {
                var Keyword = $("#Keyword").val();
                var SearchAttributeID = $("#SearchAttributeID").val();
                var Url = "/ObjectSearch/Index?AttributeID=" + SearchAttributeID + "&Keyword=" + encodeURIComponent(Keyword);
                //alert("Keyword:" + Keyword);
                document.location.href = Url;
            });

        });
    </script>
}
